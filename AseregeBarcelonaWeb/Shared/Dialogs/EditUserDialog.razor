<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="User.Nombre" T="string" Label="Nombre" />
        <MudTextField @bind-Value="User.Apellido" T="string" Label="Apellido" />
        
        <MudNumericField @bind-Value="User.Edad" Label="Edad" Variant="Variant.Text" Min="0" />
       
        <MudTextField @bind-Value="User.Sexo" T="char" Label="Sexo" />
        <MudTextField @bind-Value="User.Email" T="string" Label="Email" />
        <MudTextField @bind-Value="User.Telefono" T="string" Label="Telefono" />

        <MudTextField @bind-Value="User.Passwordseguro"
                      Label="Password"
                      Variant="Variant.Text"
                      InputType="@PasswordVisibility"
                      Adornment="Adornment.End"
                      AdornmentIcon="@IconVisibility"
                      OnAdornmentClick="OnPasswordVisibleClick" 
                      AdornmentAriaLabel="Mostrar contraseña">
        </MudTextField>
        
        <MudTextField @bind-Value="PasswordRepeat" T="string" Label="Repetir Contraseña" />

        @if (PasswordRepeat == User.Passwordseguro)                
        {
            <MudProgressLinear Color="Color.Error" Size="Size.Medium" Value="@(CryptographyManager.GetPasswordSecurityScore(PasswordRepeat))" Class="my-7">
                <MudText Typo="Typo.subtitle1" Color="Color.Dark">
                    <b>@CryptographyManager.GetPasswordSecurityScore(PasswordRepeat)%</b>
                </MudText>
            </MudProgressLinear>                
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>                  
        @if (PasswordRepeat == User.Passwordseguro && !String.IsNullOrEmpty(User.Nombre) && !String.IsNullOrEmpty(User.Apellido))
        {
            <MudButton Color="Color.Primary" OnClick="@(async(e) => await Submit())">Ok</MudButton>
        }
    </DialogActions>
</MudDialog>

@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public User User { get; set; }
    private string PasswordRepeat { get; set; } = "";

    private bool PasswordVisible = false;
    private string IconVisibility { get; set; } = Icons.Material.Filled.VisibilityOff;
    private InputType PasswordVisibility { get; set; } = InputType.Password;


    private async Task Submit()
    {
        if (User.Passwordseguro == PasswordRepeat && User.Passwordseguro.Length > 4 && PasswordRepeat.Length > 4)
        {           
            MudDialog.Close(DialogResult.Ok(User));
        }
        await Task.CompletedTask;
    }

    void Cancel() => MudDialog.Cancel();

    private void OnPasswordVisibleClick()
    {

        PasswordVisible = !PasswordVisible;
        IconVisibility = PasswordVisible ? Icons.Material.Filled.VisibilityOff : Icons.Material.Filled.Visibility;
        PasswordVisibility = PasswordVisible ? InputType.Password : InputType.Text;        
    }

    protected override Task OnParametersSetAsync()
    {
        User.Passwordseguro = String.Empty;
        return base.OnParametersSetAsync();
    }    
}