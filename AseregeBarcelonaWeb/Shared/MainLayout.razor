@inherits LayoutComponentBase
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar style="background-color:black;" Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />

        
        <MudChipSet @bind-SelectedChip="selected" SelectedValuesChanged="SelectedValuesChanged" Filter="true" Mandatory="true">
            <MudChip Text="blue" Color="Color.Info">Home</MudChip>
            <MudChip Text="pink" Color="Color.Secondary">Transportes</MudChip>            
            <MudChip Text="red" Color="Color.Error">Visitas</MudChip>
            <MudChip Text="orange" Color="Color.Warning">Quienes somos</MudChip>            
        </MudChipSet>

                   
       
       
        <MudMenu>
            <ActivatorContent>
                <Multiavatar Width="48px" Height="48px" AvatarId="Pepe" />                
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Icon="@Icons.Material.Filled.Edit">Perfil</MudMenuItem>                
                <MudMenuItem OnClick="@(async(e) => await CloseSession())" Icon="@Icons.Material.Filled.Logout">Cerrar Sesión</MudMenuItem>
            </ChildContent>
        </MudMenu>

    </MudAppBar>
    <MudDrawer @bind-Open="ChangeSidebar" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">Aserege Framework</MudText>
        </MudDrawerHeader>                
      
        <NavMenu />

    </MudDrawer>
    <MudMainContent Class="px-4">      
        
        Pasos aqui
        @Body
        <MainPage></MainPage>
        <Transportes></Transportes>
        <VerPerfil></VerPerfil>
        <PanelAdministracion></PanelAdministracion>
        <Footer></Footer>
        
        
    </MudMainContent>
    
</MudLayout>
@code 
{    
    MudChip selected;

    bool ChangeSidebar = true;

    public string SelectedPage { get; set; } = "<MainPage></MainPage>";
    private void SwapPage(string eleccion)
    {
        switch (eleccion)
        {
            case "Home":
                SelectedPage = "<MainPage></MainPage>";
                break;
            case "Tansportes":
                SelectedPage = "<Transportes></Transportes>";
                break;
            case "Visitas":
                break;
            case "Quienes_somos?":
                break;
            case "perfil":
                SelectedPage = "<VerPerfil></VerPerfil>";
                break;
            case "admin":
                SelectedPage = "<PanelAdministracion></PanelAdministracion>";
                break;
        }        
    }


    private void SelectedValuesChanged()
    {
        SelectedPage = "<Transportes></Transportes>";
        StateHasChanged();
    }

    
    void DrawerToggle()
    {
        ChangeSidebar = !ChangeSidebar;
    }

    private async Task CloseSession()
    {
        string nombre = await jsRuntime.InvokeAsync<string>("localStorage.removeItem", "Name");
        string Password = await jsRuntime.InvokeAsync<string>("localStorage.removeItem", "Password");                
    }                
}